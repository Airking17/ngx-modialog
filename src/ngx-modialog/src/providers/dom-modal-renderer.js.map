{"version":3,"sources":["../../../../../src/ngx-modialog/src/providers/dom-modal-renderer.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EACL,cAAc,EAGd,QAAQ,EACR,UAAU,EACX,MAAM,eAAA,CAAgB;AAEvB,OAAO,EAAE,eAAA,EAAgB,MAAO,8BAAA,CAA+B;AAC/D,OAAO,EAAE,SAAA,EAAU,MAAO,sBAAA,CAAuB;AAEjD,OAAO,EAAE,YAAA,EAAa,MAAO,kBAAA,CAAmB;AAGhD;IAIE,4BAAoB,MAAsB,EAAU,QAAkB;QAAlD,WAAM,GAAN,MAAM,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAF9D,UAAK,GAAY,CAAC,CAAC,OAAO,QAAQ,KAAK,WAAW,IAAI,CAAC,QAAQ,CAAC,CAAC;IAEC,CAAC;IAE3E,mCAAM,GAAN,UAAO,MAAsB,EAAE,KAAuB,EAAE,QAAmB;QAA3E,iBA2BC;QA1BC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACd,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC3B,CAAC;QAED,IAAM,MAAM,GAAG,eAAe,CAAC;YAC7B,SAAS,EAAE,YAAY;YACvB,KAAK,OAAA;YACL,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC;gBACxB,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE;aACzC,EAAE,QAAQ,CAAC;SACb,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAExC,uFAAuF;YACvF,MAAM,CAAC,SAAS,CAAC,SAAS,CAAE,cAAM,OAAA,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAvC,CAAuC,CAAE,CAAC;QAC9E,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YAC9B,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QACzE,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC3D,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAjCU,kBAAkB;QAD9B,UAAU,EAAE;yCAKiB,cAAc,EAAoB,QAAQ;OAJ3D,kBAAkB,CAkC9B;IAAD,yBAAC;CAlCD,AAkCC,IAAA;SAlCY,kBAAkB","file":"dom-modal-renderer.js","sourceRoot":"","sourcesContent":["import {\n  ApplicationRef,\n  ViewContainerRef,\n  ComponentRef,\n  Injector,\n  Injectable\n} from '@angular/core';\n\nimport { createComponent } from '../framework/createComponent';\nimport { DialogRef } from '../models/dialog-ref';\nimport { OverlayRenderer } from '../models/tokens';\nimport { ModalOverlay } from '../overlay/index';\n\n@Injectable()\nexport class DOMOverlayRenderer implements OverlayRenderer {\n\n  private isDoc: boolean = !(typeof document === 'undefined' || !document);\n\n  constructor(private appRef: ApplicationRef, private injector: Injector) { }\n\n  render(dialog: DialogRef<any>, vcRef: ViewContainerRef, injector?: Injector): ComponentRef<ModalOverlay> {\n    if (!injector) {\n      injector = this.injector;\n    }\n\n    const cmpRef = createComponent({\n      component: ModalOverlay,\n      vcRef,\n      injector: Injector.create([\n        { provide: DialogRef, useValue: dialog }\n      ], injector)\n    });\n\n    if (!vcRef) {\n      this.appRef.attachView(cmpRef.hostView);\n\n      // TODO: doesn't look like this is needed, explore. leaving now to be on the safe side.\n      dialog.onDestroy.subscribe( () => this.appRef.detachView(cmpRef.hostView) );\n    }\n\n    if (vcRef && dialog.inElement) {\n      vcRef.element.nativeElement.appendChild(cmpRef.location.nativeElement);\n    } else if (this.isDoc) {\n      document.body.appendChild(cmpRef.location.nativeElement);\n    }\n\n    return cmpRef;\n  }\n}\n\n"]}