{"version":3,"sources":["../../../../src/ngx-modialog/src/ngx-modialog.module.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,4BAAA,EAA8B,QAAA,EAAoC,MAAO,eAAA,CAAgB;AAClG,OAAO,EAAE,YAAA,EAAa,MAAO,iBAAA,CAAkB;AAC/C,OAAO,EAAE,qBAAA,EAAsB,MAAO,2BAAA,CAA4B;AAElE,OAAO,EAAE,qBAAA,EAAuB,kBAAA,EAAmB,MAAO,mBAAA,CAAoB;AAC9E,OAAO,EAAE,eAAA,EAAgB,MAAO,iBAAA,CAAkB;AAClD,OAAO,EAAE,WAAA,EAAa,kBAAA,EAAmB,MAAO,oBAAA,CAAqB;AACrE,OAAO,EACL,OAAO,EACP,YAAY,EACZ,qBAAqB,EACrB,aAAa,EACd,MAAM,iBAAA,CAAkB;AA0BzB;IAAA,IAAa,WAAW,mBAAxB;IAiCA,CAAC,CAAA;IA/BC;;;;;;OAMG;IACI,0BAAc,GAArB,UAAsB,eAAyC;QAC7D,MAAM,CAAC;YACL,QAAQ,EAAE,aAAW;YACrB,SAAS,EAAE;gBACT,EAAC,OAAO,EAAE,4BAA4B,EAAE,QAAQ,EAAE,eAAe,EAAE,KAAK,EAAE,IAAI,EAAC;aAChF;SACF,CAAA;IACH,CAAC;IAED;;;;OAIG;IACI,mBAAO,GAAd,UAAe,eAA0C;QACvD,MAAM,CAAC;YACL,QAAQ,EAAE,aAAW;YACrB,SAAS,EAAE;gBACT,EAAC,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,kBAAkB,EAAC;gBACxD,EAAC,OAAO,EAAE,qBAAqB,EAAE,QAAQ,EAAE,qBAAqB,EAAE,KAAK,EAAE,IAAI,EAAC;gBAC9E,EAAC,OAAO,EAAE,4BAA4B,EAAE,QAAQ,EAAE,eAAe,IAAI,EAAE,EAAE,KAAK,EAAE,IAAI,EAAC;aACtF;SACF,CAAC;IACJ,CAAC;IAhCU,WAAW;QAxBvB,QAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,YAAY;gBACZ,WAAW;gBACX,kBAAkB;gBAClB,qBAAqB;gBACrB,aAAa;aACd;YACD,OAAO,EAAE,CAAE,YAAY,CAAE;YACzB,OAAO,EAAE;gBACP,WAAW;gBACX,kBAAkB;gBAClB,qBAAqB;gBACrB,aAAa;aACd;YACD,SAAS,EAAE;gBACT,OAAO;aACR;YACD,eAAe,EAAE;gBACf,YAAY;gBACZ,WAAW;gBACX,kBAAkB;aACnB;SACF,CAAC;OACW,WAAW,CAiCvB;IAAD,kBAAC;;CAjCD,AAiCC,IAAA;SAjCY,WAAW","file":"ngx-modialog.module.js","sourceRoot":"","sourcesContent":["import { ANALYZE_FOR_ENTRY_COMPONENTS, NgModule, ModuleWithProviders, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EVENT_MANAGER_PLUGINS } from '@angular/platform-browser';\n\nimport { DOMOutsideEventPlugin, DOMOverlayRenderer } from './providers/index';\nimport { OverlayRenderer } from './models/tokens';\nimport { CSSBackdrop, CSSDialogContainer } from './components/index';\nimport {\n  Overlay,\n  ModalOverlay,\n  OverlayDialogBoundary,\n  OverlayTarget\n} from './overlay/index';\n\n@NgModule({\n  declarations: [\n    ModalOverlay,\n    CSSBackdrop,\n    CSSDialogContainer,\n    OverlayDialogBoundary,\n    OverlayTarget\n  ],\n  imports: [ CommonModule ],\n  exports: [\n    CSSBackdrop,\n    CSSDialogContainer,\n    OverlayDialogBoundary,\n    OverlayTarget\n  ],\n  providers: [\n    Overlay\n  ],\n  entryComponents: [\n    ModalOverlay,\n    CSSBackdrop,\n    CSSDialogContainer\n  ]\n})\nexport class ModalModule {\n\n  /**\n   * Returns a ModalModule pre-loaded with a list of dynamically inserted components.\n   * Since dynamic components are not analysed by the angular compiler they must register manually\n   * using entryComponents, this is an easy way to do it.\n   * @param entryComponents A list of dynamically inserted components (dialog's).\n   * @returns {{ngModule: ModalModule, providers: {provide: OpaqueToken, useValue: Array<Type|any[]>, multi: boolean}[]}}\n   */\n  static withComponents(entryComponents: Array<Type<any> | any[]>): ModuleWithProviders {\n    return {\n      ngModule: ModalModule,\n      providers: [\n        {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: entryComponents, multi: true}\n      ]\n    }\n  }\n\n  /**\n   * Returns a NgModule for use in the root Module.\n   * @param entryComponents A list of dynamically inserted components (dialog's).\n   * @returns ModuleWithProviders\n   */\n  static forRoot(entryComponents?: Array<Type<any> | any[]>): ModuleWithProviders {\n    return {\n      ngModule: ModalModule,\n      providers: [\n        {provide: OverlayRenderer, useClass: DOMOverlayRenderer},\n        {provide: EVENT_MANAGER_PLUGINS, useClass: DOMOutsideEventPlugin, multi: true},\n        {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: entryComponents || [], multi: true}\n      ]\n    };\n  }\n}\n"]}