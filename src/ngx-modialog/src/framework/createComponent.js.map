{"version":3,"sources":["../../../../../src/ngx-modialog/src/framework/createComponent.ts"],"names":[],"mappings":"AAAA,OAAO,EAGL,wBAAwB,EAGzB,MAAM,eAAe,CAAC;AASvB,MAAM,0BAA0B,YAAiC;IAC/D,IAAM,QAAQ,GAAc,YAAY,CAAC,QAAQ,IAAI,YAAY,CAAC,KAAK,CAAC,cAAc,CAAC;IACvF,IAAM,UAAU,GACZ,QAAQ,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,uBAAuB,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;IAE3F,EAAE,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;QACvB,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,CACvC,UAAU,EACV,YAAY,CAAC,KAAK,CAAC,MAAM,EACzB,QAAQ,EACR,YAAY,CAAC,gBAAgB,CAC9B,CAAC;IACJ,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;AACH,CAAC","file":"createComponent.js","sourceRoot":"","sourcesContent":["import {\n  ComponentRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  Injector,\n  ViewContainerRef\n} from '@angular/core';\n\nexport interface CreateComponentArgs {\n  component: any;\n  vcRef: ViewContainerRef;\n  injector?: Injector;\n  projectableNodes?: any[][];\n}\n\nexport function createComponent(instructions: CreateComponentArgs): ComponentRef<any> {\n  const injector: Injector =  instructions.injector || instructions.vcRef.parentInjector;\n  const cmpFactory: ComponentFactory<any>\n    = injector.get(ComponentFactoryResolver).resolveComponentFactory(instructions.component);\n\n  if (instructions.vcRef) {\n    return instructions.vcRef.createComponent(\n      cmpFactory,\n      instructions.vcRef.length,\n      injector,\n      instructions.projectableNodes\n    );\n  } else {\n    return cmpFactory.create(injector);\n  }\n}\n\n"]}