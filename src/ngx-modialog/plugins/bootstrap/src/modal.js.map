{"version":3,"sources":["../../../../../../src/ngx-modialog/plugins/bootstrap/src/modal.ts"],"names":[],"mappings":"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","file":"modal.js","sourceRoot":"","sourcesContent":["import { combineLatest } from 'rxjs/operator/combineLatest';\n\nimport {\n  Injectable,\n  ResolvedReflectiveProvider as RRP\n} from '@angular/core';\n\nimport {\n  Maybe,\n  ContainerContent,\n  Overlay,\n  DialogRef,\n  Modal as Modal_,\n  CSSBackdrop,\n  PromiseCompleter\n} from 'ngx-modialog';\n\nimport { BSModalContainer } from './modal-container.component';\n\nimport { OneButtonPresetBuilder } from './presets/one-button-preset';\nimport { TwoButtonPresetBuilder, PromptPresetBuilder } from './presets/two-button-preset';\n\n// TODO: use DI factory for this.\n// TODO: consolidate dup code\nconst isDoc: boolean = !(typeof document === 'undefined' || !document);\n\nlet animationClass: string = 'in';\n\n/**\n * Execute this method to flag that you are working with Bootstrap version 4.\n */\nexport function bootstrap4Mode(): void {\n  animationClass = 'show';\n}\n\n@Injectable()\nexport class Modal extends Modal_ {\n  constructor(overlay: Overlay) {\n    super(overlay);\n  }\n\n  alert(): OneButtonPresetBuilder {\n    return new OneButtonPresetBuilder(this, <any>{isBlocking: false});\n  }\n\n  prompt(): PromptPresetBuilder {\n    return new PromptPresetBuilder(this, <any>{isBlocking: true, keyboard: null});\n  }\n\n  confirm(): TwoButtonPresetBuilder {\n    return new TwoButtonPresetBuilder(this, <any>{isBlocking: true, keyboard: null});\n  }\n\n  protected create(dialogRef: DialogRef<any>,\n                   content: ContainerContent,\n                   bindings?: RRP[]): Maybe<DialogRef<any>> {\n\n    const backdropRef = this.createBackdrop(dialogRef, CSSBackdrop);\n    const containerRef = this.createContainer(dialogRef, BSModalContainer, content, bindings);\n\n    let overlay = dialogRef.overlayRef.instance;\n    let backdrop = backdropRef.instance;\n    let container = containerRef.instance;\n\n    dialogRef.inElement ? overlay.insideElement() : overlay.fullscreen();\n\n    // add body class if this is the only dialog in the stack\n    if (isDoc && !document.body.classList.contains('modal-open')) {\n      document.body.classList.add('modal-open');\n    }\n\n\n    if (dialogRef.inElement) {\n      backdrop.setStyle('position', 'absolute');\n    }\n    backdrop.addClass('modal-backdrop fade', true);\n\n    backdrop.addClass(animationClass);\n    container.addClass(animationClass);\n\n    if (containerRef.location.nativeElement) {\n      containerRef.location.nativeElement.focus();\n    }\n\n    overlay.beforeDestroy(() => {\n      const completer = new PromiseCompleter<void>();\n      backdrop.removeClass(animationClass);\n      container.removeClass(animationClass);\n\n      combineLatest.call(backdrop.myAnimationEnd$(), container.myAnimationEnd$(), (s1, s2) => [s1,s2])\n        .subscribe( sources => {\n          isDoc && this.overlay.groupStackLength(dialogRef) === 1 && document.body.classList.remove('modal-open');\n          completer.resolve();\n        });\n\n      return completer.promise;\n    });\n\n    return dialogRef;\n  }\n}\n"]}