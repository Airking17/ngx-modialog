{"version":3,"sources":["../../../../../../src/demo/app/home/in-app-plugin/modal.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EACL,UAAU,EAEX,MAAM,eAAA,CAAgB;AAEvB,OAAO,EAEL,OAAO,EAGP,KAAK,IAAI,MAAA,EACV,MAAM,gBAAA,CAAiB;AAExB,OAAO,EAAE,kBAAA,EAAmB,MAAO,kBAAA,CAAmB;AACtD,OAAO,EAAE,wBAAA,EAAyB,MAAO,iBAAA,CAAkB;AAG3D;IAA2B,yBAAM;IAC/B,eAAY,OAAgB;eAC1B,kBAAM,OAAO,CAAC;IAChB,CAAC;IAED,qBAAK,GAAL;QACE,MAAM,CAAC,IAAI,wBAAwB,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC;IAES,sBAAM,GAAhB,UAAiB,SAAyB,EACzB,OAAyB,EACzB,QAAgB;QAC/B,EAAE,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;YACxB,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;QAChD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;QAC7C,CAAC;QAED,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;QAEzE,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;QAC/D,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAE3D,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAxBU,KAAK;QADjB,UAAU,EAAE;yCAEU,OAAO;OADjB,KAAK,CAyBjB;IAAD,YAAC;CAzBD,AAyBC,CAzB0B,MAAM,GAyBhC;SAzBY,KAAK","file":"modal.js","sourceRoot":"","sourcesContent":["import {\n  Injectable,\n  ResolvedReflectiveProvider as RRP\n} from '@angular/core';\n\nimport {\n  Maybe,\n  Overlay,\n  DialogRef,\n  ContainerContent,\n  Modal as Modal_\n} from 'angular2-modal';\n\nimport { InAppModalBackdrop } from './modal-backdrop';\nimport { InAppModalContextBuilder } from './modal-context';\n\n@Injectable()\nexport class Modal extends Modal_ {\n  constructor(overlay: Overlay) {\n    super(overlay);\n  }\n\n  alert(): InAppModalContextBuilder {\n    return new InAppModalContextBuilder(this);\n  }\n\n  protected create(dialogRef: DialogRef<any>,\n                   content: ContainerContent,\n                   bindings?: RRP[]): Maybe<DialogRef<any>> {\n    if (dialogRef.inElement) {\n      dialogRef.overlayRef.instance.insideElement();\n    } else {\n      dialogRef.overlayRef.instance.fullscreen();\n    }\n\n    dialogRef.overlayRef.instance.addComponent(InAppModalBackdrop, bindings);\n\n    dialogRef.overlayRef.instance.setStyle('position', 'relative');\n    dialogRef.overlayRef.instance.setStyle('display', 'block');\n\n    return dialogRef;\n  }\n}\n"]}