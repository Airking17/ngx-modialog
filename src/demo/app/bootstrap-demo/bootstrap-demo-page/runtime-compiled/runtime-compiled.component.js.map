{"version":3,"sources":["../../../../../../../src/demo/app/bootstrap-demo/bootstrap-demo-page/runtime-compiled/runtime-compiled.component.ts"],"names":[],"mappings":"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","file":"runtime-compiled.component.js","sourceRoot":"","sourcesContent":["import { Component, Compiler, NgModuleRef, ViewContainerRef } from '@angular/core';\n\nimport { DialogRef, overlayConfigFactory } from \"angular2-modal\";\nimport { Modal, BSModalContext } from 'angular2-modal/plugins/bootstrap';\n\nimport { InnerRuntimeCompiledModule, InnerRuntimeCompiledComponent } from './inner-runtime-compiled';\nlet runtimeModuleRefPromise: Promise<NgModuleRef<any>>;\n\n@Component({\n  selector: 'runtime-compiled-component',\n  template:\n`\n<div class=\"modal-header\">\n    <h3>I'm a JIT compiled component!</h3>\n</div>\n<div class=\"modal-body\">\n  <p>This is a demonstration of JIT component displayed as a modal content, it also shows how to link the result of a chain of modals.</p>\n  <p>To JIT compile another (different) module inside this (JIT) compiled module press the button below.\n  The value selected on the popup opened will bubble down.</p>\n  <button class=\"btn btn-primary\" (click)=\"openModal()\">Compile and open again!</button>\n  \n  <hr>\n  \n  <p>To demonstrate opening a JIT compiled component inside a view container ref that was created before the component was compiled press the button below.</p>\n  <button class=\"btn btn-warning\" (click)=\"openInElement()\">Open in element!</button>\n</div>`\n})\nexport class RuntimeCompiledComponent {\n  private toKill: DialogRef<any>[] = [];\n\n  constructor(private dialogRef: DialogRef<any>,\n              private vcRef: ViewContainerRef,\n              private compiler: Compiler,\n              private modal: Modal) {\n\n  }\n\n  openInElement() {\n    if (!runtimeModuleRefPromise) {\n      runtimeModuleRefPromise = this.compiler.compileModuleAsync(InnerRuntimeCompiledModule)\n        .then(moduleFactory => moduleFactory.create(this.vcRef.parentInjector));\n    }\n\n    runtimeModuleRefPromise\n      .then( module => overlayConfigFactory({inElement: true}, BSModalContext, { injector: module.injector, viewContainer: 'demo-head' }) )\n      .then( overlayConfig => this.modal.open(InnerRuntimeCompiledComponent, overlayConfig) )\n      .then( dialogRef => this.toKill.push(dialogRef) );\n  }\n\n  ngOnDestroy(): void {\n    let dlgRef: DialogRef<any>;\n    while(dlgRef = this.toKill.pop()) {\n      dlgRef.close('');\n    }\n  }\n\n  openModal(): void {\n    if (!runtimeModuleRefPromise) {\n      runtimeModuleRefPromise = this.compiler.compileModuleAsync(InnerRuntimeCompiledModule)\n        .then(moduleFactory => moduleFactory.create(this.vcRef.parentInjector));\n    }\n\n    runtimeModuleRefPromise\n      .then( module => overlayConfigFactory({isBlocking: true}, BSModalContext, { injector: module.injector }) )\n      .then( overlayConfig => this.modal.open(InnerRuntimeCompiledComponent, overlayConfig) )\n      .then( dialogRef => dialogRef.result )\n      .then( value => this.dialogRef.close(value) )\n      .catch( err => this.dialogRef.dismiss() );\n  }\n}\n"]}