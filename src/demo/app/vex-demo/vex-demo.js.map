{"version":3,"sources":["../../../../../src/demo/app/vex-demo/vex-demo.ts"],"names":[],"mappings":"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","file":"vex-demo.js","sourceRoot":"","sourcesContent":["import { Component, ViewEncapsulation, ViewChild, TemplateRef } from '@angular/core';\n\nimport { overlayConfigFactory } from \"ngx-modialog\";\nimport {\n  VEXBuiltInThemes,\n  Modal,\n  DialogPreset,\n  DialogFormModal,\n  DialogPresetBuilder,\n  VEXModalContext,\n  VexModalModule,\n  providers\n} from 'ngx-modialog/plugins/vex';\n\nimport { DemoHead, ModalCommandDescriptor } from '../demo-head/index';\nimport * as presets from './presets';\nimport { LoginDialog } from './login-dialog';\n\n@Component({\n  selector: 'vex-demo',\n  styleUrls: [\n    './css/vex.css',\n    './css/vex-theme-default.css',\n    './css/vex-theme-os.css',\n    './css/vex-theme-plain.css',\n    './css/vex-theme-wireframe.css',\n    './css/vex-theme-flat-attack.css',\n    './css/vex-theme-top.css',\n    './css/vex-theme-bottom-right-corner.css'\n  ],\n  templateUrl: './vex-demo.tpl.html',\n  // We override providers set by the Module since this app is using multiple module plugins\n  // (js-native, vex, bootstrap) which messes up the provider tree (last plugin wins)\n  // usually an app will use one plugin and this line is not needed.\n  providers: providers,\n  encapsulation: ViewEncapsulation.None\n})\nexport class VexDemo {\n  modalCommands: ModalCommandDescriptor[];\n  theme: VEXBuiltInThemes = <VEXBuiltInThemes>'default';\n  @ViewChild(DemoHead) public demoHead: DemoHead;\n  @ViewChild('templateRef') public templateRef: TemplateRef<any>;\n\n  constructor(public modal: Modal) {\n\n    this.modalCommands = [\n      {\n        text: 'alert drop in',\n        factory: () => presets.alert.call(this, this.modal).open()\n      },\n      {\n        text: 'prompt drop in',\n        factory: () => presets.prompt.call(this, this.modal).open()\n      },\n      {\n        text: 'confirm drop in',\n        factory: () => presets.confirm.call(this, this.modal).open()\n      },\n      {\n        text: 'Cascading example',\n        factory: () => presets.cascading.call(this, this.modal).open()\n      },\n      {\n        text: 'In Element example',\n        factory: () => presets.alert.call(this, this.modal).inElement(true).open('demo-head')\n      },\n      {\n        text: 'String content',\n        factory: () => this.modal\n          .open('Hello modal!', overlayConfigFactory({ isBlocking: false }, VEXModalContext))\n      },\n      {\n        text: 'TemplateRef content',\n        factory: () => this.modal\n          .open(this.templateRef, overlayConfigFactory({ isBlocking: false }, VEXModalContext))\n      },\n      {\n        text: 'Custom Modal example',\n        factory: () => {\n          return new DialogPresetBuilder<DialogPreset>(this.modal)\n            .className(this.theme)\n            .content(LoginDialog)\n            .message('Ary you coming to the event?')\n            .addOkButton('Yep!')\n            .addButton(\n              'vex-dialog-button-primary vex-dialog-button',\n              'Maybe?',\n              (cmp: DialogFormModal, $event: MouseEvent) => cmp.dialog.close('Maybe')\n            )\n            .addCancelButton('Nope!')\n            .open();\n        }\n      },\n      {\n        text: 'no buttons',\n        factory: () => presets.noButtons.call(this, this.modal).open()\n      },\n      {\n        text: 'custom buttons',\n        factory: () => presets.customButtons.call(this, this.modal).open()\n      }\n    ];\n  }\n}\n"]}