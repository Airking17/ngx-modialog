{"version":3,"sources":["../../../../../../src/angular2-modal/plugins/bootstrap/src/message-modal.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAA,EAAW,iBAAA,EAAkB,MAAO,eAAA,CAAgB;AAE7D,OAAO,EAAE,SAAA,EAA0B,MAAO,gBAAA,CAAiB;AA6B3D;IAGE,6BAAmB,MAAqC;QAArC,WAAM,GAAN,MAAM,CAA+B;QACtD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IAChC,CAAC;IAED,sBAAI,0CAAS;aAAb;YACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;QACxC,CAAC;;;OAAA;IATU,mBAAmB;QAZ/B,SAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,aAAa,EAAE,iBAAiB,CAAC,IAAI;YACrC,QAAQ,EAAE,gbAOJ;SACP,CAAC;yCAI2B,SAAS;OAHzB,mBAAmB,CAU/B;IAAD,0BAAC;CAVD,AAUC,IAAA;SAVY,mBAAmB;AAgChC;IAGE,4BAAmB,MAAqC;QAArC,WAAM,GAAN,MAAM,CAA+B;QACtD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IAChC,CAAC;IALU,kBAAkB;QApB9B,SAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,aAAa,EAAE,iBAAiB,CAAC,IAAI;YACrC,MAAM,EAAE,CAAC,2CAEP,CAAC;YACH,QAAQ,EAAE,wdAYX;SACA,CAAC;yCAI2B,SAAS;OAHzB,kBAAkB,CAM9B;IAAD,yBAAC;CAND,AAMC,IAAA;SANY,kBAAkB;AAS/B;;GAEG;AAUH;IACE,uBAAmB,MAAqC;QAArC,WAAM,GAAN,MAAM,CAA+B;IACxD,CAAC;IAED,+BAAO,GAAP,UAAQ,GAA+B,EAAE,MAAkB;QACzD,MAAM,CAAC,eAAe,EAAE,CAAC;QACzB,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC5B,CAAC;IAPU,aAAa;QATzB,SAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,aAAa,EAAE,iBAAiB,CAAC,IAAI;YACrC,QAAQ,EAAE,kOAIL;SACN,CAAC;yCAE2B,SAAS;OADzB,aAAa,CAQzB;IAAD,oBAAC;CARD,AAQC,IAAA;SARY,aAAa;AAU1B;;;;;;;;;;;;;;;;;GAiBG;AAMH;IACE,wBAAmB,MAAqC;QAArC,WAAM,GAAN,MAAM,CAA+B;IACxD,CAAC;IAFU,cAAc;QAL1B,SAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,aAAa,EAAE,iBAAiB,CAAC,IAAI;YACrC,QAAQ,EAAE,mFAAmF;SAC9F,CAAC;yCAE2B,SAAS;OADzB,cAAc,CAG1B;IAAD,qBAAC;CAHD,AAGC,IAAA;SAHY,cAAc","file":"message-modal.component.js","sourceRoot":"","sourcesContent":["import { Component, ViewEncapsulation } from '@angular/core';\n\nimport { DialogRef, ModalComponent } from 'angular2-modal';\n\nimport { MessageModalPreset } from'./presets/message-modal-preset';\n\nexport interface BSMessageModalButtonHandler {\n  (cmp: ModalComponent<MessageModalPreset>, $event: MouseEvent): void;\n}\n\n/**\n * Interface for button definition\n */\nexport interface BSMessageModalButtonConfig {\n  cssClass: string;\n  caption: string;\n  onClick: BSMessageModalButtonHandler;\n}\n\n@Component({\n  selector: 'modal-title',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div [ngClass]=\"context.headerClass\" [ngSwitch]=\"titleHtml\">\n      <button *ngIf=\"context.showClose\" type=\"button\" class=\"close\" \n              aria-label=\"Close\" (click)=\"dialog.dismiss()\">\n          <span aria-hidden=\"true\">Ã—</span>\n      </button>\n      <div *ngSwitchCase=\"1\" [innerHtml]=\"context.titleHtml\"></div>\n      <h3 *ngSwitchDefault class=\"modal-title\">{{context.title}}</h3>\n </div>`\n})\nexport class BSMessageModalTitle {\n  public context: MessageModalPreset;\n\n  constructor(public dialog: DialogRef<MessageModalPreset>) {\n    this.context = dialog.context;\n  }\n\n  get titleHtml(): number {\n    return this.context.titleHtml ? 1 : 0;\n  }\n}\n\n@Component({\n  selector: 'modal-body',\n  encapsulation: ViewEncapsulation.None,\n  styles: [`.form-group {\n    margin-top: 10px;\n  }`],\n  template: `<div [ngClass]=\"context.bodyClass\"> \n    <div [innerHtml]=\"context.message\"></div>\n      <div *ngIf=\"context.showInput\" class=\"form-group\">\n        <input autofocus #input\n            name=\"bootstrap\" \n            type=\"text\" \n            class=\"form-control\"\n            [value]=\"context.defaultValue\"\n            (change)=\"context.defaultValue = input.value\"  \n            placeholder=\"{{context.placeholder}}\">\n      </div>\n    </div>\n`\n})\nexport class BSMessageModalBody {\n  public context: MessageModalPreset;\n\n  constructor(public dialog: DialogRef<MessageModalPreset>) {\n    this.context = dialog.context;\n  }\n}\n\n\n/**\n * Represents the modal footer for storing buttons.\n */\n@Component({\n  selector: 'modal-footer',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div [ngClass]=\"dialog.context.footerClass\">\n    <button *ngFor=\"let btn of dialog.context.buttons;\"\n            [ngClass]=\"btn.cssClass\"\n            (click)=\"onClick(btn, $event)\">{{btn.caption}}</button>\n</div>`\n})\nexport class BSModalFooter {\n  constructor(public dialog: DialogRef<MessageModalPreset>) {\n  }\n\n  onClick(btn: BSMessageModalButtonConfig, $event: MouseEvent) {\n    $event.stopPropagation();\n    btn.onClick(this, $event);\n  }\n}\n\n/**\n * A Component representing a generic bootstrap modal content element.\n *\n * By configuring a MessageModalContext instance you can:\n *\n *  Header:\n *      - Set header container class (default: modal-header)\n *      - Set title text (enclosed in H3 element)\n *      - Set title html (overrides text)\n *\n *  Body:\n *      - Set body container class.  (default: modal-body)\n *      - Set body container HTML.\n *\n *  Footer:\n *      - Set footer class.  (default: modal-footer)\n *      - Set button configuration (from 0 to n)\n */\n@Component({\n  selector: 'modal-content',\n  encapsulation: ViewEncapsulation.None,\n  template: `<modal-title></modal-title><modal-body></modal-body><modal-footer></modal-footer>`\n})\nexport class BSMessageModal implements ModalComponent<MessageModalPreset> {\n  constructor(public dialog: DialogRef<MessageModalPreset>) {\n  }\n}\n"]}