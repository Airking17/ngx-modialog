{"version":3,"sources":["../../../../../../src/angular2-modal/plugins/vex/src/dialog-form-modal.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EACL,SAAS,EACT,iBAAiB,EACjB,KAAK,EACL,MAAM,EACN,YAAY,EACb,MAAM,eAAA,CAAgB;AAEvB,OAAO,EACL,SAAS,EAEV,MAAM,gBAAA,CAAiB;AAuBxB;;GAEG;AAWH;IAVA;QAiBE;;;WAGG;QACc,kBAAa,GAAG,IAAI,YAAY,EAAuB,CAAC;IAM3E,CAAC;IAJC,kCAAO,GAAP,UAAQ,GAAQ,EAAE,MAAkB;QAClC,MAAM,CAAC,eAAe,EAAE,CAAC;QACzB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAC,GAAG,KAAA,EAAE,MAAM,QAAA,EAAC,CAAC,CAAC;IACzC,CAAC;IAXQ;QAAR,KAAK,EAAE;;qDAAmC;IAMjC;QAAT,MAAM,EAAE;;2DAAgE;IAX9D,gBAAgB;QAV5B,SAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,aAAa,EAAE,iBAAiB,CAAC,IAAI;YACrC,QAAQ,EAAE,0NAKL;SACN,CAAC;OACW,gBAAgB,CAiB5B;IAAD,uBAAC;CAjBD,AAiBC,IAAA;SAjBY,gBAAgB;AAmB7B;;;GAGG;AAUH;IAGE,yBAAmB,MAA+B;QAA/B,WAAM,GAAN,MAAM,CAAyB;QAChD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IAChC,CAAC;IAED,uCAAa,GAAb,UAAc,MAA2B;QACvC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IATU,eAAe;QAT3B,SAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,aAAa,EAAE,iBAAiB,CAAC,IAAI;YACrC,QAAQ,EAAE,qQAIJ;SACP,CAAC;yCAI2B,SAAS;OAHzB,eAAe,CAU3B;IAAD,sBAAC;CAVD,AAUC,IAAA;SAVY,eAAe;AA8B5B;IAGE,oBAAmB,MAA+B;QAA/B,WAAM,GAAN,MAAM,CAAyB;QAChD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IAChC,CAAC;IALU,UAAU;QAlBtB,SAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,aAAa,EAAE,iBAAiB,CAAC,IAAI;YACrC,QAAQ,EACV,6fAYwC;SACvC,CAAC;yCAI2B,SAAS;OAHzB,UAAU,CAMtB;IAAD,iBAAC;CAND,AAMC,IAAA;SANY,UAAU","file":"dialog-form-modal.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  ViewEncapsulation,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\nimport {\n  DialogRef,\n  ModalComponent\n} from 'angular2-modal';\n\nimport { DialogPreset } from './presets/dialog-preset';\nimport { DropInPreset } from './presets/dropin-preset';\n\nexport interface VEXButtonHandler {\n  (cmp: ModalComponent<DialogPreset>, $event: MouseEvent): void;\n}\n\n/**\n * Interface for button definition\n */\nexport interface VEXButtonConfig {\n  cssClass: string;\n  caption: string;\n  onClick: VEXButtonHandler;\n}\n\nexport interface VEXButtonClickEvent {\n  btn: VEXButtonConfig;\n  $event: MouseEvent;\n}\n\n/**\n * A Dialog is a\n */\n@Component({\n  selector: 'vex-dialog-buttons',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div class=\"vex-dialog-buttons\">\n    <button type=\"button\" \n         *ngFor=\"let btn of buttons;\"\n         [class]=\"btn.cssClass\"\n         (click)=\"onClick(btn, $event)\">{{btn.caption}}</button>\n</div>`\n})\nexport class VEXDialogButtons {\n\n  /**\n   * A collection of button configurations, each configuration is a button to display.\n   */\n  @Input() public buttons: VEXButtonConfig[];\n\n  /**\n   * Emitted when a button was clicked\n   * @type {EventEmitter<VEXButtonClickEvent>}\n   */\n  @Output() public onButtonClick = new EventEmitter<VEXButtonClickEvent>();\n\n  onClick(btn: any, $event: MouseEvent) {\n    $event.stopPropagation();\n    this.onButtonClick.emit({btn, $event});\n  }\n}\n\n/**\n * A Dialog with customized buttons wrapped in a form.\n *\n */\n@Component({\n  selector: 'modal-dialog',\n  encapsulation: ViewEncapsulation.None,\n  template: `<form class=\"vex-dialog-form\">\n    <ng-container *ngComponentOutlet=\"context.content\"></ng-container>\n    <vex-dialog-buttons [buttons]=\"context.buttons\"\n                        (onButtonClick)=\"onButtonClick($event)\"></vex-dialog-buttons>\n</form>`\n})\nexport class DialogFormModal implements ModalComponent<DialogPreset> {\n  public context: DialogPreset;\n\n  constructor(public dialog: DialogRef<DialogPreset>) {\n    this.context = dialog.context;\n  }\n\n  onButtonClick($event: VEXButtonClickEvent) {\n    $event.btn.onClick(this, $event.$event);\n  }\n}\n\n@Component({\n  selector: 'drop-in-dialog',\n  encapsulation: ViewEncapsulation.None,\n  template:\n`<div class=\"vex-dialog-message\">{{context.message}}</div>\n <div *ngIf=\"context.showInput\" class=\"vex-dialog-input\">\n   <input #input\n          autofocus\n          name=\"vex\" \n          type=\"text\" \n          class=\"vex-dialog-prompt-input\"\n           (change)=\"context.defaultResult = input.value\" \n          placeholder=\"{{context.placeholder}}\">\n </div>\n <div *ngIf=\"context.showCloseButton\" \n      [class]=\"context.closeClassName\"\n      (click)=\"dialog.dismiss()\"></div>`\n})\nexport class FormDropIn implements ModalComponent<DropInPreset> {\n  public context: DropInPreset;\n\n  constructor(public dialog: DialogRef<DropInPreset>) {\n    this.context = dialog.context;\n  }\n}\n"]}